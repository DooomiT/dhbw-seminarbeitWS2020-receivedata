apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: dhbw-seminarbeit-receivedata
  name: dhbw-seminarbeit-receivedata
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: dhbw-seminarbeit-receivedata
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dhbw-seminarbeit-receivedata
    spec:
      containers:
      - env:
        - name: EVENT_BUS_ENDPOINT  # dynamic Eventbus endpoint via environment
          valueFrom:
            configMapKeyRef:
              key: EVENT_BUS_ENDPOINT
              name: dhbw-seminararbeit-receivedata-env
        image: flo101/dhbw-seminarbeit-receivedata
        imagePullPolicy: ""
        name: dhbw-seminarbeit-receivedata
        ports:
        - containerPort: 4000
        resources:   # Aufgabe j -> specify limits
          limits:
            memory: "128Mi"
            cpu: "0.1"
        livenessProbe:  # Aufgabe i -> restart if get /values is not available
          httpGet:
            path: /values
            port: 4000
          initialDelaySeconds: 20
          periodSeconds: 10
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
